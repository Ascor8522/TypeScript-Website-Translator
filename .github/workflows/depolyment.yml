name: Deployment
on:
  push:
    branches-ignore:
      - gh-pages
  delete:

jobs:
  vite-build:
    runs-on: ubuntu-latest
    steps:
      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cloning the repo & checking out the latest commit
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: npm ci

      - name: Building the site
        run: npm run build

  gh-pages-build:
    needs: vite-build
    runs-on: ubuntu-latest
    steps:
      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cloning the repo
        uses: actions/checkout@v3

      - name: Building the site
        run: |
          BRANCHES_TO_BUILD=$(git branch -r | grep -v HEAD | grep -v gh-pages | grep -v dist | sed 's/\s*origin\///')
          REPO_NAME=$(echo ${{ github.repository }} | sed 's/.*\///')
          echo "::debug::Branches: $BRANCHES_TO_BUILD"
          echo "::debug::Repo name: $REPO_NAME"
          for BRANCH in $BRANCHES_TO_BUILD; do
            echo "::group::Building branch $BRANCH"
            git checkout $BRANCH
            npm ci
            npm run build -- --outDir "dist/$BRANCH" --base "/$REPO_NAME/$BRANCH" --force
            echo "::endgroup::"
          done
        shell: bash

      - name: Switching to gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          clean: false

      - name: Deleting old branches builds
        run: |
          OLD_BRANCHES=$(find . -mindepth 1 -maxdepth 1 -type d -not -name .git -not -name dist | sed 's/\.\///')
          CURRENT_BRANCHES=$(git branch -r | grep -v HEAD | grep -v gh-pages | grep -v dist | sed 's/\s*origin\///')
          BRANCHES_TO_DELETE=$(echo "$OLD_BRANCHES" | grep -v "$CURRENT_BRANCHES")
          echo "::debug::Old branches: ${OLD_BRANCHES[*]}"
          echo "::debug::Current branches: ${CURRENT_BRANCHES[*]}"
          echo "::debug::Branches to delete: ${BRANCHES_TO_DELETE[*]}"
          echo "::group::Deleting branches"
          for BRANCH in $BRANCHES_TO_DELETE; do
            rm -rf $BRANCH
            echo "::debug::Deleted old branch $BRANCH"
          done
          echo "::endgroup::"
        shell: bash

      - name: Copying updated branches builds
        run: |
          OLD_BRANCHES=$(find . -mindepth 1 -maxdepth 1 -type d -not -name .git -not -name dist | sed 's/\.\///')
          BUILT_BRANCHES=$(find dist -mindepth 1 -maxdepth 1 -type d -not -name dist | sed 's/dist\///')
          BRANCHES_TO_UPDATE=$(echo "$BUILT_BRANCHES" | grep "$OLD_BRANCHES")
          echo "::debug::Old branches: ${OLD_BRANCHES[*]}"
          echo "::debug::Built branches: ${BUILT_BRANCHES[*]}"
          echo "::debug::Branches to update: ${BRANCHES_TO_UPDATE[*]}"
          echo "::group::Updating branches"
          for BRANCH in $BRANCHES_TO_UPDATE; do
            rm -rf $BRANCH
            mv -f dist/$BRANCH $BRANCH
            echo "::debug::Updated branch $BRANCH"
          done
          echo "::endgroup::"
          rm -rf dist
        shell: bash

      - name: Committing the changes
        uses: EndBug/add-and-commit@v9
        with:
          add: .
          default_author: github_actions
          message: "Deploy ${{ github.push.after }} to GitHub Pages"
          push: true
